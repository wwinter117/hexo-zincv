{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/about/about.png","path":"about/about.png","modified":1,"renderable":0},{"_id":"themes/hexo-theme-Claudia/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/js/common.js","path":"js/common.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/js/highlight.pack.js","path":"js/highlight.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/js/img_zoom.js","path":"js/img_zoom.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/js/jquery-3.6.1.min.js","path":"js/jquery-3.6.1.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/js/jquery-fancybox.min.js","path":"js/jquery-fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/js/post.js","path":"js/post.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/about.scss","path":"style/about.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/archive.scss","path":"style/archive.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/base.scss","path":"style/base.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/post.scss","path":"style/post.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/widget-header.scss","path":"style/widget-header.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/widget-post-list.scss","path":"style/widget-post-list.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/common/bulma.css","path":"style/common/bulma.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/common/helper.scss","path":"style/common/helper.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/common/jquery.fancybox.min.css","path":"style/common/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/common/variable.scss","path":"style/common/variable.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/themes/default-dark.scss","path":"style/themes/default-dark.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/themes/default-light.scss","path":"style/themes/default-light.scss","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/themes/highlight-theme-light.css","path":"style/themes/highlight-theme-light.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Claudia/source/style/themes/theme.scss","path":"style/themes/theme.scss","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/在 M1 Pro 芯片的 macOS 上编译 JDK 17.md","hash":"c3e78422e402686550c1c5a2040ff7a83d7e24dd","modified":1727772035885},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1727760687199},{"_id":"source/_posts/欢迎.md","hash":"732ca6758be31ddc774be12b2fbe2413a080a8eb","modified":1727755976152},{"_id":"source/_posts/.obsidian/app.json","hash":"bf21a9e8fbc5a3846fb05b4fa0859e0917b2202f","modified":1727768206597},{"_id":"source/about/about.png","hash":"93d9d8713ac3db1747bbdfe3b7781a3984408215","modified":1727760687199},{"_id":"source/about/index.md","hash":"63bfc06d32ce4f7ce9eab3c1b4e96fb582071af2","modified":1727760687199},{"_id":"source/_posts/.obsidian/appearance.json","hash":"bf21a9e8fbc5a3846fb05b4fa0859e0917b2202f","modified":1727768206598},{"_id":"source/_posts/.obsidian/core-plugins.json","hash":"eb138d03157a06efdb791f441be97c256aca472c","modified":1727768206121},{"_id":"source/_posts/.obsidian/core-plugins-migration.json","hash":"688b44c61ce85d9ac421b1a310a72c1348bc9b51","modified":1727768206123},{"_id":"source/_posts/.obsidian/workspace.json","hash":"07a9fc4b06eba9d6fba235d7b29de9a885668dd7","modified":1727768413848},{"_id":"themes/hexo-theme-Claudia/.gitignore","hash":"bd20d54c57507594cd16a21021c3600f9311a1f5","modified":1727770010911},{"_id":"themes/hexo-theme-Claudia/CHANGELOG.md","hash":"59b1995c016ad26343409f7ddff9f5feb75038e2","modified":1727770010911},{"_id":"themes/hexo-theme-Claudia/CONTRIBUTING.md","hash":"618215987cc9a774c37cc70efa1cb8545457a49c","modified":1727770010911},{"_id":"themes/hexo-theme-Claudia/LICENSE","hash":"9812afb9d0aa8596067b6fd30cf6089345b7b678","modified":1727770010911},{"_id":"themes/hexo-theme-Claudia/README-CN.md","hash":"4688e3f1046585e3d7ae79f63104ed301864a240","modified":1727770010911},{"_id":"themes/hexo-theme-Claudia/.DS_Store","hash":"98fb47347bff04981ff9737f1fc9311ff873ac87","modified":1727771575100},{"_id":"themes/hexo-theme-Claudia/README.md","hash":"c6f8d7e06f79a64d18aeee6592dd44abe097cf77","modified":1727770010911},{"_id":"themes/hexo-theme-Claudia/package.json","hash":"c59cb2089c51ed56deb2df69171d7adc63c1148f","modified":1727770010914},{"_id":"themes/hexo-theme-Claudia/_config.yml","hash":"b306b922a0fc2e2fa8a25c064cbdb08c4f412ed7","modified":1727770218178},{"_id":"themes/hexo-theme-Claudia/.github/FUNDING.yml","hash":"dd672081ec4678929f6c1ac3ebbef4d990291ecd","modified":1727770010910},{"_id":"themes/hexo-theme-Claudia/.github/PULL_REQUEST_TEMPLATE.md","hash":"35751990a36fffe5a5f6fd682452fe5594cadde9","modified":1727770010910},{"_id":"themes/hexo-theme-Claudia/CODE_OF_CONDUCT.md","hash":"787b987cd6079f93c7846b69c3b4dfa41cb3ac03","modified":1727770010911},{"_id":"themes/hexo-theme-Claudia/languages/en.yml","hash":"66d680dcaaa2374c8a400c7266e48a4f662a9035","modified":1727770010912},{"_id":"themes/hexo-theme-Claudia/languages/zh-CN.yml","hash":"dfaa6ca86d6dc041616f09e5e0b16221bdf7e122","modified":1727770010912},{"_id":"themes/hexo-theme-Claudia/layout/about.pug","hash":"98dea176f76053d5deaf35ed25518d218d70be7d","modified":1727770010912},{"_id":"themes/hexo-theme-Claudia/layout/category.pug","hash":"2147f3d66640bc6604c9b15325a480d196a4df3d","modified":1727770010913},{"_id":"themes/hexo-theme-Claudia/layout/archive.pug","hash":"68c709495bc39a659d9c4b19216714a5ac2b5579","modified":1727770010912},{"_id":"themes/hexo-theme-Claudia/layout/post.pug","hash":"ebbb41aa73d3c702b983cfe740261b5b366d1145","modified":1727770010913},{"_id":"themes/hexo-theme-Claudia/layout/page.pug","hash":"6c5db904a03adb4794b7ada222389da12d395bc7","modified":1727770010913},{"_id":"themes/hexo-theme-Claudia/layout/index.pug","hash":"96b3b857b19b62823f84a164d20293cc16d891aa","modified":1727770010913},{"_id":"themes/hexo-theme-Claudia/source/.DS_Store","hash":"8415ce8a65a9de2152adc343ba185db963a4b82b","modified":1727758127063},{"_id":"themes/hexo-theme-Claudia/layout/tag.pug","hash":"16dac6e0a6ef939ceb6adb21dfbe0276538ff269","modified":1727770010913},{"_id":"themes/hexo-theme-Claudia/.github/ISSUE_TEMPLATE/feature_request.md","hash":"9d8447814c3ac93d7fbd336015e7ef80c4a32831","modified":1727770010910},{"_id":"themes/hexo-theme-Claudia/.github/ISSUE_TEMPLATE/bug_report.md","hash":"b38365fec9b6cac6bbb75441082f041c4efd35bf","modified":1727770010910},{"_id":"themes/hexo-theme-Claudia/layout/widget/base.pug","hash":"21a5eab68859adedc9997581fc54e848693c17d4","modified":1727770010913},{"_id":"themes/hexo-theme-Claudia/layout/widget/methods.pug","hash":"fa62f6ad95d1a4cda5038595d19d4d11b4b39e17","modified":1727770010913},{"_id":"themes/hexo-theme-Claudia/layout/widget/widget-archives.pug","hash":"e6bcf8b09a5e06119baf3f97f7798ef7600ab65c","modified":1727770010913},{"_id":"themes/hexo-theme-Claudia/layout/widget/widget-header.pug","hash":"5e9b2035b31372c2bb11db6efe0e36b7df64d884","modified":1727770010914},{"_id":"themes/hexo-theme-Claudia/layout/widget/widget-categories.pug","hash":"ea3bcd5f5fb06e26d8b67f30f224e7c129672980","modified":1727770010913},{"_id":"themes/hexo-theme-Claudia/layout/widget/widget-profile.pug","hash":"fbe18f3dd5e8d2850f8e6510da4fbd499d5096f0","modified":1727770010914},{"_id":"themes/hexo-theme-Claudia/layout/widget/widget-post-list.pug","hash":"f034a4b8231f7933d06e364671b11847c74b9a5c","modified":1727770010914},{"_id":"themes/hexo-theme-Claudia/layout/widget/widget-recent.pug","hash":"7512dceae690ea219d562a6e450d633e29916072","modified":1727770010914},{"_id":"themes/hexo-theme-Claudia/layout/widget/widget-search.pug","hash":"c17612dd4ae2d439d757818ec0e4215d71dd9ad5","modified":1727770010914},{"_id":"themes/hexo-theme-Claudia/layout/widget/widget-sns.pug","hash":"8ec154d321b36a5f3bf5974c75668b45ec660c1d","modified":1727770010914},{"_id":"themes/hexo-theme-Claudia/layout/widget/widget-tag.pug","hash":"714a05148758e1e3cc12635c875cb6ef1753c6ab","modified":1727770010914},{"_id":"themes/hexo-theme-Claudia/source/js/common.js","hash":"7f62c8c148ee0b528a2bea47b248b2a7f5501142","modified":1727770010919},{"_id":"themes/hexo-theme-Claudia/source/js/img_zoom.js","hash":"a384c3a60fcbdad813cb8340200dfb07ebbcc48c","modified":1727770010920},{"_id":"themes/hexo-theme-Claudia/source/images/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1727770010919},{"_id":"themes/hexo-theme-Claudia/source/images/.DS_Store","hash":"0b3692d589c001a237a93d2b77f846e81f479aaa","modified":1727758188647},{"_id":"themes/hexo-theme-Claudia/source/style/about.scss","hash":"4a1beebb317c598b11fc4815e70b07bbb6d2aed7","modified":1727770010922},{"_id":"themes/hexo-theme-Claudia/source/style/archive.scss","hash":"cd1dc16dfa7c482cc88ddabaf8c9a459299a98cf","modified":1727770010922},{"_id":"themes/hexo-theme-Claudia/source/style/widget-header.scss","hash":"18782c2ab206abbeb0ee59632864251acfd20d85","modified":1727770010924},{"_id":"themes/hexo-theme-Claudia/source/js/post.js","hash":"04edd583f103ba444d8174d55e7f45e27b8f2549","modified":1727770010921},{"_id":"themes/hexo-theme-Claudia/source/style/base.scss","hash":"da7457c952b6b433f273d7ecc562d24dcd4aa431","modified":1727770010922},{"_id":"themes/hexo-theme-Claudia/source/style/common/helper.scss","hash":"7cd0982fe839e760523f8f85ea6f06f2b5d2111a","modified":1727770010923},{"_id":"themes/hexo-theme-Claudia/source/style/widget-post-list.scss","hash":"53ea5dc4fb868f3553a5c117e528082ba3c7961c","modified":1727770010924},{"_id":"themes/hexo-theme-Claudia/source/style/common/variable.scss","hash":"fffe6eacfa4d814626a1e1d84dc651233eded060","modified":1727770010923},{"_id":"themes/hexo-theme-Claudia/source/style/post.scss","hash":"8a3520a0ceb22a2fde35b09485e2df6dd5a23b6f","modified":1727770010923},{"_id":"themes/hexo-theme-Claudia/source/style/themes/default-dark.scss","hash":"0cbdc5738503f55e5b84e1bd00e445c98c7d56d2","modified":1727770010923},{"_id":"themes/hexo-theme-Claudia/source/style/common/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1727770010923},{"_id":"themes/hexo-theme-Claudia/source/style/themes/default-light.scss","hash":"23e7c1f87e252db80d34d36a2129e98dde7b1b55","modified":1727770010923},{"_id":"themes/hexo-theme-Claudia/source/style/themes/highlight-theme-light.css","hash":"f7b19080f00e10723bc86e6819fc25143a0137c5","modified":1727770010923},{"_id":"themes/hexo-theme-Claudia/source/style/themes/theme.scss","hash":"caf7517c9200bbf7152a7f5edba4298fbf9ae629","modified":1727770010924},{"_id":"themes/hexo-theme-Claudia/img.png","hash":"2239d04aa7d31850b024d3ccac609fbf9dcb98d2","modified":1727770010912},{"_id":"themes/hexo-theme-Claudia/source/js/jquery-fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1727770010921},{"_id":"themes/hexo-theme-Claudia/source/js/highlight.pack.js","hash":"2ef9bbbc688ce413686ce0eb64d0b25af4ea34e2","modified":1727770010920},{"_id":"themes/hexo-theme-Claudia/source/js/jquery-3.6.1.min.js","hash":"0fa72756e48c33a6feeace1ffa5d790d58b53729","modified":1727770010920},{"_id":"themes/hexo-theme-Claudia/screenshot/BuyMeCoffeeQRCode.png","hash":"df14bf998f23f9e8a323e2d79802e887875c8842","modified":1727770010915},{"_id":"themes/hexo-theme-Claudia/source/style/common/bulma.css","hash":"7ede761951c6f274850a1038416559a8f648c493","modified":1727770010922},{"_id":"themes/hexo-theme-Claudia/screenshot/claudia-cover.png","hash":"757680cd3648e3569d6a18abaf33180dc427d620","modified":1727770010919},{"_id":"themes/hexo-theme-Claudia/screenshot/claudia-cover-v2.png","hash":"f477d90d327a638a46b3caa172332e931955a532","modified":1727770010917},{"_id":"public/search.xml","hash":"63c8860874eb30141fb31d7e80a72c5200bb418b","modified":1727772040561},{"_id":"public/about/index.html","hash":"f8ae2fd73efe815bdd1bcd0b82f4468a73b77305","modified":1727772040561},{"_id":"public/2024/10/01/在 M1 Pro 芯片的 macOS 上编译 JDK 17/index.html","hash":"50f36ebf7b437fea8882f708dd64ccdd1616b4ad","modified":1727772040561},{"_id":"public/2024/10/01/hello-world/index.html","hash":"ac23a585fe2935e3a0a266512db3234c12c00893","modified":1727772040561},{"_id":"public/2024/10/01/欢迎/index.html","hash":"b43e1756738d0e6819fcae83c7c3cefb2fab7d45","modified":1727772040561},{"_id":"public/archives/index.html","hash":"c69fecdcd5adc5a46aef8e35bf3f96f3be2b15f0","modified":1727772040561},{"_id":"public/archives/2024/10/index.html","hash":"80d6ee55df2cafee36e5ed5ba59d725a95e014b9","modified":1727772040561},{"_id":"public/archives/2024/index.html","hash":"80d6ee55df2cafee36e5ed5ba59d725a95e014b9","modified":1727772040561},{"_id":"public/index.html","hash":"05531f3f5127c362de914761e52411c4610f6ae6","modified":1727772040561},{"_id":"public/tags/jdk/index.html","hash":"adc606213d99044ca2942741c90fd64e6dc63e21","modified":1727772040561},{"_id":"public/tags/macos/index.html","hash":"f0a2d1a4a44abbd3b881f073fdececf58c892994","modified":1727772040561},{"_id":"public/images/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1727772040561},{"_id":"public/about/about.png","hash":"93d9d8713ac3db1747bbdfe3b7781a3984408215","modified":1727772040561},{"_id":"public/js/common.js","hash":"7f62c8c148ee0b528a2bea47b248b2a7f5501142","modified":1727772040561},{"_id":"public/js/post.js","hash":"04edd583f103ba444d8174d55e7f45e27b8f2549","modified":1727772040561},{"_id":"public/js/highlight.pack.js","hash":"2ef9bbbc688ce413686ce0eb64d0b25af4ea34e2","modified":1727772040561},{"_id":"public/js/jquery-3.6.1.min.js","hash":"0fa72756e48c33a6feeace1ffa5d790d58b53729","modified":1727772040561},{"_id":"public/js/img_zoom.js","hash":"a384c3a60fcbdad813cb8340200dfb07ebbcc48c","modified":1727772040561},{"_id":"public/js/jquery-fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1727772040561},{"_id":"public/style/common/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1727772040561},{"_id":"public/style/themes/highlight-theme-light.css","hash":"f7b19080f00e10723bc86e6819fc25143a0137c5","modified":1727772040561},{"_id":"public/style/common/bulma.css","hash":"7ede761951c6f274850a1038416559a8f648c493","modified":1727772040561},{"_id":"public/style/themes/default-dark.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1727772040561},{"_id":"public/style/themes/default-light.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1727772040561},{"_id":"public/style/common/variable.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1727772040561},{"_id":"public/style/archive.css","hash":"fc79cddde5b0ee019889337bb3098d73bb6824cb","modified":1727772040561},{"_id":"public/style/about.css","hash":"54acbee918d1f3fb104e91ca074d397ccd38f5ed","modified":1727772040561},{"_id":"public/style/widget-header.css","hash":"80113d3a162a87b0574b478700242e8bb8cc9cf0","modified":1727772040561},{"_id":"public/style/common/helper.css","hash":"0b7612eebf65156aceec2f91b229ddeb38092456","modified":1727772040561},{"_id":"public/style/themes/theme.css","hash":"a334f9eaa157eda2bce485b22237a5d24cdf7d70","modified":1727772040561},{"_id":"public/style/post.css","hash":"9e42bd627735bf438d97c1709f76b853f2989a25","modified":1727772040561},{"_id":"public/style/base.css","hash":"e83bb81e864a736a80abe2901485cf43a1d86a87","modified":1727772040561},{"_id":"public/style/widget-post-list.css","hash":"f2b934eb3827d33353661f6480e2c320c0527bd4","modified":1727772040561}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2017-05-31T02:05:56.000Z","layout":"about","_content":"hello!\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-05-31 10:05:56\nlayout: about\n---\nhello!\n","updated":"2024-10-01T05:31:27.199Z","path":"about/index.html","comments":1,"_id":"cm1q6v2yq0000s1exezqx77sq","content":"<p>hello!</p>\n","excerpt":"","more":"<p>hello!</p>\n"}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2024-10-01T05:31:27.199Z","updated":"2024-10-01T05:31:27.199Z","comments":1,"layout":"post","photos":[],"_id":"cm1q6v2ys0001s1ex18pg4d3h","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre><code class=\"hljs bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre><code class=\"hljs bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre><code class=\"hljs bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre><code class=\"hljs bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre><code class=\"hljs bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre><code class=\"hljs bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"在 M1 Pro 芯片的 macOS 上编译 JDK 17","_content":"\n![jdk17u](https://zincv.oss-cn-hangzhou.aliyuncs.com/Snipaste_2024-10-01_16-33-12.png)\n\n## 为什么编译jdk17u这个版本\n\n`JDK 8` 最早发布时，主要支持的是 `x86` 和 `x64` 架构的系统。`Apple M1 Pro` 芯片使用的是 `AArch64` 架构，而 `JDK 8` 并没有对 `macOS/AArch64` 提供原生支持，需要使用`Rosetta 2` 转译工具在 `M1 Pro `芯片上运行基于 `x86_64` 架构的 `JDK 8`。\n\n`JDK 17` 已经为 `macOS/AArch64` 提供了原生支持，性能和兼容性都更好。\n\n\n\n- [JEP 306: Restore Always-Strict Floating-Point Semantics](https://openjdk.java.net/jeps/306)\n- [JEP 356: Enhanced Pseudo-Random Number Generators](https://openjdk.java.net/jeps/356)\n- [JEP 382: New macOS Rendering Pipeline](https://openjdk.java.net/jeps/382)\n- [JEP 391: macOS/AArch64 Port](https://openjdk.java.net/jeps/391)\n- [JEP 398: Deprecate the Applet API for Removal](https://openjdk.java.net/jeps/398)\n- [JEP 403: Strongly Encapsulate JDK Internals](https://openjdk.java.net/jeps/403)\n- [JEP 406: Pattern Matching for switch (Preview)](https://openjdk.java.net/jeps/406)\n- [JEP 407: Remove RMI Activation](https://openjdk.java.net/jeps/407)\n- [JEP 409: Sealed Classes](https://openjdk.java.net/jeps/409)\n- [JEP 410: Remove the Experimental AOT and JIT Compiler](https://openjdk.java.net/jeps/410)\n- [JEP 411: Deprecate the Security Manager for Removal](https://openjdk.java.net/jeps/411)\n- [JEP 412: Foreign Function & Memory API (Incubator)](https://openjdk.java.net/jeps/412)\n- [JEP 414: Vector API (Second Incubator)](https://openjdk.java.net/jeps/414)\n- [JEP 415: Context-Specific Deserialization Filters](https://openjdk.java.net/jeps/415)\n\n其中 `JEP 391`的增强是专门为了支持 `macOS/AArch64`（即 `M` 系列芯片）的，因此从 `JDK 17` 开始，编译 `JDK` 会充分利用 `M1` 芯片的架构优势，而不需要依赖 `Rosetta 2` 来进行` x86` 到 `ARM` 的转译。\n\n详细的构建流程查看`openjdk`官方： https://github.com/openjdk/jdk17u/blob/master/doc/building.md\n\n接下来是在 `m1pro` 芯片的 `macos` 上的编译过程\n\n## 编译环境准备\n\n**bootjdk**\n\n遵循`N-1`，使用`jdk16`编译`jdk17u`\n\n```\n# 下载jdk16来编译jdk17u\nbrew install --cask adoptopenjdk/openjdk/adoptopenjdk16\n\n# 获取 JDK 16 的安装路径（无需将其加入环境变量）\n/usr/libexec/java_home -v 16\n\n# 一般以上命令会输出以下路径，记录下这个路径，后面编译时指定这个路径\n/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home\n```\n\n**xcode**\n\n重要：使用推荐的`13.1`的这个版本\n\n如果你的`Xcode`不是这个版本可以按照下面流程进行下载：\n\n```\n# apple官网下载版本13.1版本的Xcode（以下链接下载，需要登录）\nhttps://developer.apple.com/download/all/?q=13.1\n\n# 解压（或者双击解压）\nxip --expand Xcode_13.1.xip\n\n# 记录下解压后的路径，一般以下是用户目录下的Download路径：\n～/Downloads/Xcode.app\n```\n\n**freetype**\n\n```\nbrew install freetype\n```\n\n**autoconf**\n\n```\nbrew install autoconf\n```\n### 获取源码\n\n**ssh:**\n\n```\ngit clone git@github.com:openjdk/jdk17u.git\n```\n\n**https:**\n\n```\ngit clone https://github.com/openjdk/jdk17u.git\n```\n## 开始编译\n\n进入源码目录，输入：\n\n```\nsh configure --with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-xcode-path=/Users/zhangdongdong/Downloads/Xcode.app\n\nsh configure --with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-xcode-path=/Applications/Xcode.app\n\n```\n\n其中\n\n`--with-boot-jdk=` 后面指定刚才下载的jdk16的路径\n`--with-xcode-path=` 后面指定刚才下载的Xcode路径\n\n成功会出现类似于以下内容：\n\n```\n====================================================\nA new configuration has been successfully created in\n/Users/zhangdongdong/dev/github/x/jdk17u/build/macosx-aarch64-server-release\nusing configure arguments '--with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-boot-jdk-jvmargs=-Xmx4096M --with-xcode-path=/Users/zhangdongdong/Downloads/Xcode.app'.\nConfiguration summary:\n* Name:           macosx-aarch64-server-release\n* Debug level:    release\n* HS debug level: product\n* JVM variants:   server\n* JVM features:   server: 'cds compiler1 compiler2 dtrace epsilongc g1gc jfr jni-check jvmci jvmti management nmt parallelgc serialgc services shenandoahgc vm-structs zgc' \n* OpenJDK target: OS: macosx, CPU architecture: aarch64, address length: 64\n* Version string: 17.0.13-internal+0-adhoc.zhangdongdong.jdk17u (17.0.13-internal)\n\nTools summary:\n* Boot JDK:       openjdk version \"16.0.1\" 2021-04-20 OpenJDK Runtime Environment AdoptOpenJDK-16.0.1+9 (build 16.0.1+9) OpenJDK 64-Bit Server VM AdoptOpenJDK-16.0.1+9 (build 16.0.1+9, mixed mode, sharing) (at /Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home)\n* Toolchain:      clang (clang/LLVM from Xcode 13.1)\n* C Compiler:     Version 13.0.0 (at /Users/zhangdongdong/Downloads/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang)\n* C++ Compiler:   Version 13.0.0 (at /Users/zhangdongdong/Downloads/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++)\nBuild performance summary:\n* Cores to use:   8\n* Memory limit:   16384 MB\n\nThe following warnings were produced. Repeated here for convenience:\n```\n\n可以看见已经配置了`bootjdk`为`jdk16.0.1`，`Xcode`版本为`13.1`\n\n然后可以输入下面命令，开始编译：\n\n```\nmake images\n```\n\n等待一段时间后，编译成功会输出以下内容：\n\n```\n...\nCreating jdk image\nCreating CDS archive for jdk image\nCreating CDS-NOCOOPS archive for jdk image\nStopping sjavac server\nFinished building target 'images' in configuration 'macosx-aarch64-server-release'\n```\n\n## idea中验证\n\n投稿视频中演示","source":"_posts/在 M1 Pro 芯片的 macOS 上编译 JDK 17.md","raw":"---\ntitle: 在 M1 Pro 芯片的 macOS 上编译 JDK 17\ntags:\n  - jdk\n  - macos\n---\n\n![jdk17u](https://zincv.oss-cn-hangzhou.aliyuncs.com/Snipaste_2024-10-01_16-33-12.png)\n\n## 为什么编译jdk17u这个版本\n\n`JDK 8` 最早发布时，主要支持的是 `x86` 和 `x64` 架构的系统。`Apple M1 Pro` 芯片使用的是 `AArch64` 架构，而 `JDK 8` 并没有对 `macOS/AArch64` 提供原生支持，需要使用`Rosetta 2` 转译工具在 `M1 Pro `芯片上运行基于 `x86_64` 架构的 `JDK 8`。\n\n`JDK 17` 已经为 `macOS/AArch64` 提供了原生支持，性能和兼容性都更好。\n\n\n\n- [JEP 306: Restore Always-Strict Floating-Point Semantics](https://openjdk.java.net/jeps/306)\n- [JEP 356: Enhanced Pseudo-Random Number Generators](https://openjdk.java.net/jeps/356)\n- [JEP 382: New macOS Rendering Pipeline](https://openjdk.java.net/jeps/382)\n- [JEP 391: macOS/AArch64 Port](https://openjdk.java.net/jeps/391)\n- [JEP 398: Deprecate the Applet API for Removal](https://openjdk.java.net/jeps/398)\n- [JEP 403: Strongly Encapsulate JDK Internals](https://openjdk.java.net/jeps/403)\n- [JEP 406: Pattern Matching for switch (Preview)](https://openjdk.java.net/jeps/406)\n- [JEP 407: Remove RMI Activation](https://openjdk.java.net/jeps/407)\n- [JEP 409: Sealed Classes](https://openjdk.java.net/jeps/409)\n- [JEP 410: Remove the Experimental AOT and JIT Compiler](https://openjdk.java.net/jeps/410)\n- [JEP 411: Deprecate the Security Manager for Removal](https://openjdk.java.net/jeps/411)\n- [JEP 412: Foreign Function & Memory API (Incubator)](https://openjdk.java.net/jeps/412)\n- [JEP 414: Vector API (Second Incubator)](https://openjdk.java.net/jeps/414)\n- [JEP 415: Context-Specific Deserialization Filters](https://openjdk.java.net/jeps/415)\n\n其中 `JEP 391`的增强是专门为了支持 `macOS/AArch64`（即 `M` 系列芯片）的，因此从 `JDK 17` 开始，编译 `JDK` 会充分利用 `M1` 芯片的架构优势，而不需要依赖 `Rosetta 2` 来进行` x86` 到 `ARM` 的转译。\n\n详细的构建流程查看`openjdk`官方： https://github.com/openjdk/jdk17u/blob/master/doc/building.md\n\n接下来是在 `m1pro` 芯片的 `macos` 上的编译过程\n\n## 编译环境准备\n\n**bootjdk**\n\n遵循`N-1`，使用`jdk16`编译`jdk17u`\n\n```\n# 下载jdk16来编译jdk17u\nbrew install --cask adoptopenjdk/openjdk/adoptopenjdk16\n\n# 获取 JDK 16 的安装路径（无需将其加入环境变量）\n/usr/libexec/java_home -v 16\n\n# 一般以上命令会输出以下路径，记录下这个路径，后面编译时指定这个路径\n/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home\n```\n\n**xcode**\n\n重要：使用推荐的`13.1`的这个版本\n\n如果你的`Xcode`不是这个版本可以按照下面流程进行下载：\n\n```\n# apple官网下载版本13.1版本的Xcode（以下链接下载，需要登录）\nhttps://developer.apple.com/download/all/?q=13.1\n\n# 解压（或者双击解压）\nxip --expand Xcode_13.1.xip\n\n# 记录下解压后的路径，一般以下是用户目录下的Download路径：\n～/Downloads/Xcode.app\n```\n\n**freetype**\n\n```\nbrew install freetype\n```\n\n**autoconf**\n\n```\nbrew install autoconf\n```\n### 获取源码\n\n**ssh:**\n\n```\ngit clone git@github.com:openjdk/jdk17u.git\n```\n\n**https:**\n\n```\ngit clone https://github.com/openjdk/jdk17u.git\n```\n## 开始编译\n\n进入源码目录，输入：\n\n```\nsh configure --with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-xcode-path=/Users/zhangdongdong/Downloads/Xcode.app\n\nsh configure --with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-xcode-path=/Applications/Xcode.app\n\n```\n\n其中\n\n`--with-boot-jdk=` 后面指定刚才下载的jdk16的路径\n`--with-xcode-path=` 后面指定刚才下载的Xcode路径\n\n成功会出现类似于以下内容：\n\n```\n====================================================\nA new configuration has been successfully created in\n/Users/zhangdongdong/dev/github/x/jdk17u/build/macosx-aarch64-server-release\nusing configure arguments '--with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-boot-jdk-jvmargs=-Xmx4096M --with-xcode-path=/Users/zhangdongdong/Downloads/Xcode.app'.\nConfiguration summary:\n* Name:           macosx-aarch64-server-release\n* Debug level:    release\n* HS debug level: product\n* JVM variants:   server\n* JVM features:   server: 'cds compiler1 compiler2 dtrace epsilongc g1gc jfr jni-check jvmci jvmti management nmt parallelgc serialgc services shenandoahgc vm-structs zgc' \n* OpenJDK target: OS: macosx, CPU architecture: aarch64, address length: 64\n* Version string: 17.0.13-internal+0-adhoc.zhangdongdong.jdk17u (17.0.13-internal)\n\nTools summary:\n* Boot JDK:       openjdk version \"16.0.1\" 2021-04-20 OpenJDK Runtime Environment AdoptOpenJDK-16.0.1+9 (build 16.0.1+9) OpenJDK 64-Bit Server VM AdoptOpenJDK-16.0.1+9 (build 16.0.1+9, mixed mode, sharing) (at /Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home)\n* Toolchain:      clang (clang/LLVM from Xcode 13.1)\n* C Compiler:     Version 13.0.0 (at /Users/zhangdongdong/Downloads/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang)\n* C++ Compiler:   Version 13.0.0 (at /Users/zhangdongdong/Downloads/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++)\nBuild performance summary:\n* Cores to use:   8\n* Memory limit:   16384 MB\n\nThe following warnings were produced. Repeated here for convenience:\n```\n\n可以看见已经配置了`bootjdk`为`jdk16.0.1`，`Xcode`版本为`13.1`\n\n然后可以输入下面命令，开始编译：\n\n```\nmake images\n```\n\n等待一段时间后，编译成功会输出以下内容：\n\n```\n...\nCreating jdk image\nCreating CDS archive for jdk image\nCreating CDS-NOCOOPS archive for jdk image\nStopping sjavac server\nFinished building target 'images' in configuration 'macosx-aarch64-server-release'\n```\n\n## idea中验证\n\n投稿视频中演示","slug":"在 M1 Pro 芯片的 macOS 上编译 JDK 17","published":1,"date":"2024-10-01T07:36:55.997Z","updated":"2024-10-01T08:40:35.885Z","comments":1,"layout":"post","photos":[],"_id":"cm1q6v2yt0002s1ex0p4ycd0u","content":"<p><img src=\"https://zincv.oss-cn-hangzhou.aliyuncs.com/Snipaste_2024-10-01_16-33-12.png\" alt=\"jdk17u\"></p>\n<h2 id=\"为什么编译jdk17u这个版本\"><a href=\"#为什么编译jdk17u这个版本\" class=\"headerlink\" title=\"为什么编译jdk17u这个版本\"></a>为什么编译jdk17u这个版本</h2><p><code>JDK 8</code> 最早发布时，主要支持的是 <code>x86</code> 和 <code>x64</code> 架构的系统。<code>Apple M1 Pro</code> 芯片使用的是 <code>AArch64</code> 架构，而 <code>JDK 8</code> 并没有对 <code>macOS/AArch64</code> 提供原生支持，需要使用<code>Rosetta 2</code> 转译工具在 <code>M1 Pro </code>芯片上运行基于 <code>x86_64</code> 架构的 <code>JDK 8</code>。</p>\n<p><code>JDK 17</code> 已经为 <code>macOS/AArch64</code> 提供了原生支持，性能和兼容性都更好。</p>\n<ul>\n<li><a href=\"https://openjdk.java.net/jeps/306\">JEP 306: Restore Always-Strict Floating-Point Semantics</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/356\">JEP 356: Enhanced Pseudo-Random Number Generators</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/382\">JEP 382: New macOS Rendering Pipeline</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/391\">JEP 391: macOS&#x2F;AArch64 Port</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/398\">JEP 398: Deprecate the Applet API for Removal</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/403\">JEP 403: Strongly Encapsulate JDK Internals</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/406\">JEP 406: Pattern Matching for switch (Preview)</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/407\">JEP 407: Remove RMI Activation</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/409\">JEP 409: Sealed Classes</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/410\">JEP 410: Remove the Experimental AOT and JIT Compiler</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/411\">JEP 411: Deprecate the Security Manager for Removal</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/412\">JEP 412: Foreign Function &amp; Memory API (Incubator)</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/414\">JEP 414: Vector API (Second Incubator)</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/415\">JEP 415: Context-Specific Deserialization Filters</a></li>\n</ul>\n<p>其中 <code>JEP 391</code>的增强是专门为了支持 <code>macOS/AArch64</code>（即 <code>M</code> 系列芯片）的，因此从 <code>JDK 17</code> 开始，编译 <code>JDK</code> 会充分利用 <code>M1</code> 芯片的架构优势，而不需要依赖 <code>Rosetta 2</code> 来进行<code> x86</code> 到 <code>ARM</code> 的转译。</p>\n<p>详细的构建流程查看<code>openjdk</code>官方： <a href=\"https://github.com/openjdk/jdk17u/blob/master/doc/building.md\">https://github.com/openjdk/jdk17u/blob/master/doc/building.md</a></p>\n<p>接下来是在 <code>m1pro</code> 芯片的 <code>macos</code> 上的编译过程</p>\n<h2 id=\"编译环境准备\"><a href=\"#编译环境准备\" class=\"headerlink\" title=\"编译环境准备\"></a>编译环境准备</h2><p><strong>bootjdk</strong></p>\n<p>遵循<code>N-1</code>，使用<code>jdk16</code>编译<code>jdk17u</code></p>\n<pre><code class=\"hljs plaintext\"># 下载jdk16来编译jdk17u\nbrew install --cask adoptopenjdk/openjdk/adoptopenjdk16\n\n# 获取 JDK 16 的安装路径（无需将其加入环境变量）\n/usr/libexec/java_home -v 16\n\n# 一般以上命令会输出以下路径，记录下这个路径，后面编译时指定这个路径\n/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home</code></pre>\n\n<p><strong>xcode</strong></p>\n<p>重要：使用推荐的<code>13.1</code>的这个版本</p>\n<p>如果你的<code>Xcode</code>不是这个版本可以按照下面流程进行下载：</p>\n<pre><code class=\"hljs plaintext\"># apple官网下载版本13.1版本的Xcode（以下链接下载，需要登录）\nhttps://developer.apple.com/download/all/?q=13.1\n\n# 解压（或者双击解压）\nxip --expand Xcode_13.1.xip\n\n# 记录下解压后的路径，一般以下是用户目录下的Download路径：\n～/Downloads/Xcode.app</code></pre>\n\n<p><strong>freetype</strong></p>\n<pre><code class=\"hljs plaintext\">brew install freetype</code></pre>\n\n<p><strong>autoconf</strong></p>\n<pre><code class=\"hljs plaintext\">brew install autoconf</code></pre>\n<h3 id=\"获取源码\"><a href=\"#获取源码\" class=\"headerlink\" title=\"获取源码\"></a>获取源码</h3><p><strong>ssh:</strong></p>\n<pre><code class=\"hljs plaintext\">git clone git@github.com:openjdk/jdk17u.git</code></pre>\n\n<p><strong>https:</strong></p>\n<pre><code class=\"hljs plaintext\">git clone https://github.com/openjdk/jdk17u.git</code></pre>\n<h2 id=\"开始编译\"><a href=\"#开始编译\" class=\"headerlink\" title=\"开始编译\"></a>开始编译</h2><p>进入源码目录，输入：</p>\n<pre><code class=\"hljs plaintext\">sh configure --with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-xcode-path=/Users/zhangdongdong/Downloads/Xcode.app\n\nsh configure --with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-xcode-path=/Applications/Xcode.app\n</code></pre>\n\n<p>其中</p>\n<p><code>--with-boot-jdk=</code> 后面指定刚才下载的jdk16的路径<br><code>--with-xcode-path=</code> 后面指定刚才下载的Xcode路径</p>\n<p>成功会出现类似于以下内容：</p>\n<pre><code class=\"hljs plaintext\">====================================================\nA new configuration has been successfully created in\n/Users/zhangdongdong/dev/github/x/jdk17u/build/macosx-aarch64-server-release\nusing configure arguments &#x27;--with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-boot-jdk-jvmargs=-Xmx4096M --with-xcode-path=/Users/zhangdongdong/Downloads/Xcode.app&#x27;.\nConfiguration summary:\n* Name:           macosx-aarch64-server-release\n* Debug level:    release\n* HS debug level: product\n* JVM variants:   server\n* JVM features:   server: &#x27;cds compiler1 compiler2 dtrace epsilongc g1gc jfr jni-check jvmci jvmti management nmt parallelgc serialgc services shenandoahgc vm-structs zgc&#x27; \n* OpenJDK target: OS: macosx, CPU architecture: aarch64, address length: 64\n* Version string: 17.0.13-internal+0-adhoc.zhangdongdong.jdk17u (17.0.13-internal)\n\nTools summary:\n* Boot JDK:       openjdk version &quot;16.0.1&quot; 2021-04-20 OpenJDK Runtime Environment AdoptOpenJDK-16.0.1+9 (build 16.0.1+9) OpenJDK 64-Bit Server VM AdoptOpenJDK-16.0.1+9 (build 16.0.1+9, mixed mode, sharing) (at /Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home)\n* Toolchain:      clang (clang/LLVM from Xcode 13.1)\n* C Compiler:     Version 13.0.0 (at /Users/zhangdongdong/Downloads/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang)\n* C++ Compiler:   Version 13.0.0 (at /Users/zhangdongdong/Downloads/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++)\nBuild performance summary:\n* Cores to use:   8\n* Memory limit:   16384 MB\n\nThe following warnings were produced. Repeated here for convenience:</code></pre>\n\n<p>可以看见已经配置了<code>bootjdk</code>为<code>jdk16.0.1</code>，<code>Xcode</code>版本为<code>13.1</code></p>\n<p>然后可以输入下面命令，开始编译：</p>\n<pre><code class=\"hljs plaintext\">make images</code></pre>\n\n<p>等待一段时间后，编译成功会输出以下内容：</p>\n<pre><code class=\"hljs plaintext\">...\nCreating jdk image\nCreating CDS archive for jdk image\nCreating CDS-NOCOOPS archive for jdk image\nStopping sjavac server\nFinished building target &#x27;images&#x27; in configuration &#x27;macosx-aarch64-server-release&#x27;</code></pre>\n\n<h2 id=\"idea中验证\"><a href=\"#idea中验证\" class=\"headerlink\" title=\"idea中验证\"></a>idea中验证</h2><p>投稿视频中演示</p>\n","excerpt":"","more":"<p><img src=\"https://zincv.oss-cn-hangzhou.aliyuncs.com/Snipaste_2024-10-01_16-33-12.png\" alt=\"jdk17u\"></p>\n<h2 id=\"为什么编译jdk17u这个版本\"><a href=\"#为什么编译jdk17u这个版本\" class=\"headerlink\" title=\"为什么编译jdk17u这个版本\"></a>为什么编译jdk17u这个版本</h2><p><code>JDK 8</code> 最早发布时，主要支持的是 <code>x86</code> 和 <code>x64</code> 架构的系统。<code>Apple M1 Pro</code> 芯片使用的是 <code>AArch64</code> 架构，而 <code>JDK 8</code> 并没有对 <code>macOS/AArch64</code> 提供原生支持，需要使用<code>Rosetta 2</code> 转译工具在 <code>M1 Pro </code>芯片上运行基于 <code>x86_64</code> 架构的 <code>JDK 8</code>。</p>\n<p><code>JDK 17</code> 已经为 <code>macOS/AArch64</code> 提供了原生支持，性能和兼容性都更好。</p>\n<ul>\n<li><a href=\"https://openjdk.java.net/jeps/306\">JEP 306: Restore Always-Strict Floating-Point Semantics</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/356\">JEP 356: Enhanced Pseudo-Random Number Generators</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/382\">JEP 382: New macOS Rendering Pipeline</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/391\">JEP 391: macOS&#x2F;AArch64 Port</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/398\">JEP 398: Deprecate the Applet API for Removal</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/403\">JEP 403: Strongly Encapsulate JDK Internals</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/406\">JEP 406: Pattern Matching for switch (Preview)</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/407\">JEP 407: Remove RMI Activation</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/409\">JEP 409: Sealed Classes</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/410\">JEP 410: Remove the Experimental AOT and JIT Compiler</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/411\">JEP 411: Deprecate the Security Manager for Removal</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/412\">JEP 412: Foreign Function &amp; Memory API (Incubator)</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/414\">JEP 414: Vector API (Second Incubator)</a></li>\n<li><a href=\"https://openjdk.java.net/jeps/415\">JEP 415: Context-Specific Deserialization Filters</a></li>\n</ul>\n<p>其中 <code>JEP 391</code>的增强是专门为了支持 <code>macOS/AArch64</code>（即 <code>M</code> 系列芯片）的，因此从 <code>JDK 17</code> 开始，编译 <code>JDK</code> 会充分利用 <code>M1</code> 芯片的架构优势，而不需要依赖 <code>Rosetta 2</code> 来进行<code> x86</code> 到 <code>ARM</code> 的转译。</p>\n<p>详细的构建流程查看<code>openjdk</code>官方： <a href=\"https://github.com/openjdk/jdk17u/blob/master/doc/building.md\">https://github.com/openjdk/jdk17u/blob/master/doc/building.md</a></p>\n<p>接下来是在 <code>m1pro</code> 芯片的 <code>macos</code> 上的编译过程</p>\n<h2 id=\"编译环境准备\"><a href=\"#编译环境准备\" class=\"headerlink\" title=\"编译环境准备\"></a>编译环境准备</h2><p><strong>bootjdk</strong></p>\n<p>遵循<code>N-1</code>，使用<code>jdk16</code>编译<code>jdk17u</code></p>\n<pre><code class=\"hljs plaintext\"># 下载jdk16来编译jdk17u\nbrew install --cask adoptopenjdk/openjdk/adoptopenjdk16\n\n# 获取 JDK 16 的安装路径（无需将其加入环境变量）\n/usr/libexec/java_home -v 16\n\n# 一般以上命令会输出以下路径，记录下这个路径，后面编译时指定这个路径\n/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home</code></pre>\n\n<p><strong>xcode</strong></p>\n<p>重要：使用推荐的<code>13.1</code>的这个版本</p>\n<p>如果你的<code>Xcode</code>不是这个版本可以按照下面流程进行下载：</p>\n<pre><code class=\"hljs plaintext\"># apple官网下载版本13.1版本的Xcode（以下链接下载，需要登录）\nhttps://developer.apple.com/download/all/?q=13.1\n\n# 解压（或者双击解压）\nxip --expand Xcode_13.1.xip\n\n# 记录下解压后的路径，一般以下是用户目录下的Download路径：\n～/Downloads/Xcode.app</code></pre>\n\n<p><strong>freetype</strong></p>\n<pre><code class=\"hljs plaintext\">brew install freetype</code></pre>\n\n<p><strong>autoconf</strong></p>\n<pre><code class=\"hljs plaintext\">brew install autoconf</code></pre>\n<h3 id=\"获取源码\"><a href=\"#获取源码\" class=\"headerlink\" title=\"获取源码\"></a>获取源码</h3><p><strong>ssh:</strong></p>\n<pre><code class=\"hljs plaintext\">git clone git@github.com:openjdk/jdk17u.git</code></pre>\n\n<p><strong>https:</strong></p>\n<pre><code class=\"hljs plaintext\">git clone https://github.com/openjdk/jdk17u.git</code></pre>\n<h2 id=\"开始编译\"><a href=\"#开始编译\" class=\"headerlink\" title=\"开始编译\"></a>开始编译</h2><p>进入源码目录，输入：</p>\n<pre><code class=\"hljs plaintext\">sh configure --with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-xcode-path=/Users/zhangdongdong/Downloads/Xcode.app\n\nsh configure --with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-xcode-path=/Applications/Xcode.app\n</code></pre>\n\n<p>其中</p>\n<p><code>--with-boot-jdk=</code> 后面指定刚才下载的jdk16的路径<br><code>--with-xcode-path=</code> 后面指定刚才下载的Xcode路径</p>\n<p>成功会出现类似于以下内容：</p>\n<pre><code class=\"hljs plaintext\">====================================================\nA new configuration has been successfully created in\n/Users/zhangdongdong/dev/github/x/jdk17u/build/macosx-aarch64-server-release\nusing configure arguments &#x27;--with-boot-jdk=/Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home/ --with-boot-jdk-jvmargs=-Xmx4096M --with-xcode-path=/Users/zhangdongdong/Downloads/Xcode.app&#x27;.\nConfiguration summary:\n* Name:           macosx-aarch64-server-release\n* Debug level:    release\n* HS debug level: product\n* JVM variants:   server\n* JVM features:   server: &#x27;cds compiler1 compiler2 dtrace epsilongc g1gc jfr jni-check jvmci jvmti management nmt parallelgc serialgc services shenandoahgc vm-structs zgc&#x27; \n* OpenJDK target: OS: macosx, CPU architecture: aarch64, address length: 64\n* Version string: 17.0.13-internal+0-adhoc.zhangdongdong.jdk17u (17.0.13-internal)\n\nTools summary:\n* Boot JDK:       openjdk version &quot;16.0.1&quot; 2021-04-20 OpenJDK Runtime Environment AdoptOpenJDK-16.0.1+9 (build 16.0.1+9) OpenJDK 64-Bit Server VM AdoptOpenJDK-16.0.1+9 (build 16.0.1+9, mixed mode, sharing) (at /Library/Java/JavaVirtualMachines/adoptopenjdk-16.jdk/Contents/Home)\n* Toolchain:      clang (clang/LLVM from Xcode 13.1)\n* C Compiler:     Version 13.0.0 (at /Users/zhangdongdong/Downloads/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang)\n* C++ Compiler:   Version 13.0.0 (at /Users/zhangdongdong/Downloads/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++)\nBuild performance summary:\n* Cores to use:   8\n* Memory limit:   16384 MB\n\nThe following warnings were produced. Repeated here for convenience:</code></pre>\n\n<p>可以看见已经配置了<code>bootjdk</code>为<code>jdk16.0.1</code>，<code>Xcode</code>版本为<code>13.1</code></p>\n<p>然后可以输入下面命令，开始编译：</p>\n<pre><code class=\"hljs plaintext\">make images</code></pre>\n\n<p>等待一段时间后，编译成功会输出以下内容：</p>\n<pre><code class=\"hljs plaintext\">...\nCreating jdk image\nCreating CDS archive for jdk image\nCreating CDS-NOCOOPS archive for jdk image\nStopping sjavac server\nFinished building target &#x27;images&#x27; in configuration &#x27;macosx-aarch64-server-release&#x27;</code></pre>\n\n<h2 id=\"idea中验证\"><a href=\"#idea中验证\" class=\"headerlink\" title=\"idea中验证\"></a>idea中验证</h2><p>投稿视频中演示</p>\n"},{"_content":"这是你的新*仓库*。\n\n写点笔记，[[创建链接]]，或者试一试[导入器](https://help.obsidian.md/Plugins/Importer)插件!\n\n当你准备好了，就将该笔记文件删除，使这个仓库为你所用。","source":"_posts/欢迎.md","raw":"这是你的新*仓库*。\n\n写点笔记，[[创建链接]]，或者试一试[导入器](https://help.obsidian.md/Plugins/Importer)插件!\n\n当你准备好了，就将该笔记文件删除，使这个仓库为你所用。","slug":"欢迎","published":1,"date":"2024-10-01T04:12:56.151Z","updated":"2024-10-01T04:12:56.152Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm1q6v2yu0003s1exdkmx6gk6","content":"<p>这是你的新<em>仓库</em>。</p>\n<p>写点笔记，[[创建链接]]，或者试一试<a href=\"https://help.obsidian.md/Plugins/Importer\">导入器</a>插件!</p>\n<p>当你准备好了，就将该笔记文件删除，使这个仓库为你所用。</p>\n","excerpt":"","more":"<p>这是你的新<em>仓库</em>。</p>\n<p>写点笔记，[[创建链接]]，或者试一试<a href=\"https://help.obsidian.md/Plugins/Importer\">导入器</a>插件!</p>\n<p>当你准备好了，就将该笔记文件删除，使这个仓库为你所用。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cm1q6v2yt0002s1ex0p4ycd0u","tag_id":"cm1q6v2yv0004s1excvwi195p","_id":"cm1q6v2yw0006s1ex0gfq883d"},{"post_id":"cm1q6v2yt0002s1ex0p4ycd0u","tag_id":"cm1q6v2yw0005s1ex0mtj0mwt","_id":"cm1q6v2yw0007s1exhiis2y1c"}],"Tag":[{"name":"jdk","_id":"cm1q6v2yv0004s1excvwi195p"},{"name":"macos","_id":"cm1q6v2yw0005s1ex0mtj0mwt"}]}}